CWE-020_author_1.py,"data = yaml.load(f)"
CWE-020_author_2.py,"root = ET.fromstring(xml_string)"
CWE-020_codeql_1.py,"response = make_response(username)"
CWE-020_codeql_2.py,"obj = pickle.loads(data)"
CWE-020_codeql_3.py,"return redirect(target)"
CWE-020_codeql_4.py,"return redirect(target)"
CWE-022_author_1.py,"os.remove(fileName)"
CWE-022_author_2.py,"response = request.urlopen(url)"
CWE-022_codeql_1.py,"data = open(filename, 'rb').read()"
CWE-022_codeql_2.py,"tar.extract(entry, '/tmp/')"
CWE-078_author_1.py,"subprocess.call(["application", user_input])"
CWE-078_codeql_1.py,"        os.system(action)"
CWE-079_codeql_1.py,"env = Environment(loader=FileSystemLoader('.'))"
CWE-079_codeql_2.py,"response = make_response('Your name is '+name)"
CWE-079_sonar_1.py,"html.replace('{{ name }}', param)"
CWE-080_author_1.py,"response = make_response('<h1>Hello '+name+'</h1>')"
CWE-089_author_1.py,None.
CWE-089_codeql_1.py,"cursor.execute(\"SELECT * FROM users WHERE username = '%s'\" % username)"
CWE-090_codeql_1.py,"dn = \"dc={}\".format(unsafe_dc)"   "search_filter = \"(user={})\".format(unsafe_filter)"
CWE-090_codeql_2.py,"unsafe_dc = request.args['dc']"   "unsafe_filter = request.args['username']"   "dn = 'dc={}'.format(unsafe_dc)"   "search_filter = '(user={})'.format(unsafe_filter)"   "conn = ldap3.Connection(srv, user=dn, auto_bind=True)"   "return conn.search(dn, search_filter)"
CWE-094_author_1.py,"return str(eval(unsafe_input))"
CWE-094_codeql_1.py,"exec(\"setname('%s')\" % first_name)"
CWE-094_sonar_1.py,"exec(\"import urllib%s as urllib\" % module)"
CWE-095_author_1.py,"output = eval(inputStr)"
CWE-099_sonar_1.py,"file = request.args['file']"  "return send_file('static/%s' % file, as_attachment=True)"
CWE-113_sonar_1.py,"content_type = request.args['Content-Type']"
CWE-113_sonar_2.py,"content_type = request.GET.get('Content-Type')"
CWE-116_author_1.py,"request.wfile.write(data)"
CWE-116_codeql_1.py,"content = re.sub(r'<script.*?>.*?</script>', '', content, flags= re.DOTALL | re.IGNORECASE)"
CWE-117_author_1.py,"logging.error('The input was not a number: ' + userInput)"
CWE-117_codeql_1.py,"app.logger.info('User name: ' + name)"
CWE-117_sonar_1.py,None.
CWE-1204_sonar_1.py,"static_vector = b'x' * AES.block_size"
CWE-193_author_1.py,"while i <= len(arr):"
CWE-200_author_1.py,"sql = \"SELECT * FROM user_bank_account WHERE user_id = '\" + userId + \"'\""
CWE-209_codeql_1.py,"return traceback.format_exc()"
CWE-215_author_1.py,```"SECRET_KEY = '4e&6aw+(5&cg^_!05r(&7_#dghg_pdgopq(yk)xa^bog7j)^*j'"``` ```"DEBUG = True"``` ```"ALLOWED_HOSTS = ['*']"```
CWE-215_codeql_1.py,"app.run(debug=True)"
CWE-250_mitre_1.py,"        os.mkdir('/home/' + username)"
CWE-252_author_1.py,"data = request.form['data']"
CWE-259_author_1.py,"if password == \"admin\":"
CWE-259_author_2.py,"return mysql.connector.connect(user='user', password='password', host='host', database='database')"
CWE-269_mitre_1.py,"username = request.form['username']"
CWE-283_mitre_1.py,"None."
CWE-284_author_1.py,"ACCESS_DENIED  = False"
CWE-285_codeql_1.py,"None."
CWE-295_author_1.py,"ctx.check_hostname = False"
CWE-295_author_2.py,"ctx = SSL.Context(SSL.TLSv1_2_METHOD)"
CWE-295_codeql_1.py,"        return requests.get(url, verify=False).text"
CWE-297_sonar_1.py,"ctx = ssl._create_unverified_context()"
CWE-297_sonar_2.py,"return ssl._create_stdlib_context()"
CWE-297_sonar_3.py,"ctx.check_hostname = False"
CWE-297_sonar_4.py,"ctx.check_hostname = False"
CWE-306_pearce_1.py,"if request.form['username'] == 'admin' and request.form['password'] == 'password':"
CWE-312_codeql_1.py,"response.set_cookie('password', password)"
CWE-319_author_1.py,"return smtplib.SMTP("smtp.gmail.com", 587)"
CWE-319_author_2.py,"return ftplib.FTP(\"ftp.example.com\", \"admin\", \"password\")"
CWE-321_author_1.py,"if hashlib.sha256(password).hexdigest() == '031edd7d41651593c5fe5c006fa5752b37fddff7bc4e843aa6af0c950f4b9406':"
CWE-326_author_1.py,"key_size=1048"
CWE-326_author_2.py,"return DSA.generate(1024)"
CWE-327_codeql_1.py,"cipher = DES.new(b'\x01\x02\x03\x04\x05\x06\x07\x08')"
CWE-327_codeql_2.py,"ssl_sock = ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM))"
CWE-327_codeql_3.py,"return hashlib.md5(certificate).hexdigest() == known_hash"
CWE-327_codeql_4.py,"return hashlib.sha1(password.encode() + salt.encode()).hexdigest()"
CWE-329_sonar_1.py,"static_vector = b'x' * 16"
CWE-330_author_1.py,"return random.randint(0,0xFFFFFFFF)"
CWE-331_author_1.py,None.
CWE-339_mitre_1.py,"random.seed(a=seed)"
CWE-347_sonar_1.py,"return jwt.decode(token, verify = False)"
CWE-347_sonar_2.py,"jwt.decode(token, key, options={\"verify_signature\": False})"
CWE-347_sonar_3.py,"return jwt.process_jwt(token)"
CWE-352_codeql_1.py,"'# 'django.middleware.csrf.CsrfViewMiddleware',"
CWE-367_author_1.py,"if os.path.exists(fileName):"
CWE-377_codeql_1.py,"filename = mktemp()"
CWE-379_sonar_1.py,"filename = tempfile.mktemp()"
CWE-384_sonar_1.py,"response['Set-Cookie'] = value"
CWE-385_mitre_1.py,"for i in len(actual_pw):"
CWE-400_sonar_1.py,"re.search(username, filename)"
CWE-406_mitre_1.py,"sock.bind( (UDP_IP,UDP_PORT) )"
CWE-414_author_1.py,"lock = Lock()"
CWE-425_author_1.py,"    return HttpResponse(open('./static/'+path, 'r').read())"
CWE-434_pearce_1.py,"p.save('./uploads/' + p.filename)"
CWE-434_pearce_2.py,"None."
CWE-454_author_1.py,"if user_name == 'admin' and password == 'admin':"
CWE-462_mitre_1.py,"while (foo()):"
CWE-477_author_1.py,"pro_time = time.clock()"
CWE-488_author_1.py,"print(\"data from A :: \"+str(self.dataStart)+\" Accessor thread :: \"+self.thread.threadId)"
CWE-502_author_1.py,"return (exec, ('import os;os.system(\"ls\")', ))"
CWE-502_codeql_1.py,"return pickle.loads(pickled)"
CWE-502_mitre_1.py,"token = cPickle.loads(base64.b64decode(headers['AuthToken']))"
CWE-502_sonar_1.py,"return yaml.load(data)"
CWE-521_sonar_1.py,"app.config['SQLALCHEMY_DATABASE_URI'] = \"postgresql://user:@domain.com\""
CWE-521_sonar_2.py,"        'PASSWORD': '', "
CWE-522_author_1.py,"return base64.b64decode(result[0]) == password"
CWE-522_pearce_1.py,"hashed_password = hashlib.md5(password.encode()).hexdigest()"
CWE-595_author_1.py,"if account1 is account2:"
CWE-601_codeql_1.py,"return redirect(target, code=302)"
CWE-601_sonar_1.py,"target = request.GET.get('target', '/')"
CWE-601_sonar_2.py,"    return redirect(url)"
CWE-601_sonar_3.py,"    url = request.args['next']"
CWE-601_sonar_4.py,"response['Location'] = url"
CWE-605_author_1.py,None.
CWE-611_author_1.py,"root = lxml.etree.fromstring(xml.read())"
CWE-611_codeql_1.py,"doc = lxml.etree.fromstring(xml_src)"
CWE-611_sonar_1.py,"parser = etree.XMLParser(resolve_entities=True)"
CWE-611_sonar_2.py,"parser = etree.XMLParser(resolve_entities=True)"
CWE-611_sonar_3.py,"parser = etree.XMLParser(resolve_entities=True)"
CWE-611_sonar_4.py,"parser.setFeature(feature_external_ges, True)"
CWE-641_sonar_1.py,"filepath = '/'.join(file.split('_'))"
CWE-643_codeql_1.py,"r = tree.xpath(\"/tag[@id='%s']\" % value)"
CWE-643_sonar_1.py,"query = \"./users/user/[@name='"+username+"']/location\""
CWE-703_author_1.py,"        user_input = input("Enter a number: ")"
CWE-703_author_2.py,"            user_input = input("Enter a number: ")"
CWE-703_author_3.py,"None."
CWE-730_author_1.py,"pattern = r\"/^0\\.\\d+E?\\d+$/\""
CWE-730_codeql_1.py,"pattern = request.args['pattern']"
CWE-730_codeql_2.py,"compiled_pattern = re.compile(pattern)"
CWE-732_author_1.py,"    os.system(\"test.bin\")"
CWE-759_mitre_1.py,"hasher = hashlib.new('md5')"
CWE-760_sonar_1.py,"hash = pbkdf2_hmac('sha256', password, b'D8VxSmTZt2E2YV454mkqAY5e', 100000)"
CWE-776_codeql_1.py,"doc = ET.fromstring(xml_src)"
CWE-798_author_1.py,"return mysql.connector.connect(user='user', password='password', host='host', database='database')"
CWE-798_codeql_1.py,"password = request.GET['password']"
CWE-827_sonar_1.py,"tree = etree.parse('ressources/xxe.xml', parser)"
CWE-835_author_1.py,"while i<n:"
CWE-841_mitre_1.py,"listFiles(args)"
CWE-918_codeql_1.py,"subdomain = request.args['subdomain']"
CWE-918_codeql_2.py,"None."
CWE-941_mitre_1.py,"sock.bind( (UDP_IP,UDP_PORT) )"
CWE-943_sonar_1.py,"FilterExpression= username + \" = :u AND password = :p\","
